{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "MATLAB Parallel Server with AWS Batch.",
  "Parameters": {
    "ContainerImage": {
      "Description": "Specify the Docker image to use to execute jobs. This parameter is prepopulated with the default MathWorks Docker image for MATLAB Parallel Server with AWS Batch. Alternatively, specify a container repository in the form repository-url/image:tag.",
      "Type": "String",
      "Default": "mathworks/matlab-deps:R2025a-aws-batch"
    },
    "InstanceTypes": {
      "Description": "Specify the Amazon EC2 instance types allowed as a comma-delimited list. You can specify instance families (for example, 'c4' or 'p3') or specific sizes within a family (for example, 'c4.8xlarge'). Use 'optimal' to pick instance types on the fly that match the demands of your job queue. For more information on instance types, see https://aws.amazon.com/ec2/instance-types/.",
      "Type": "CommaDelimitedList",
      "Default": "optimal"
    },
    "MaxWorkers": {
      "Description": "Specify the maximum number of MATLAB workers that the cluster can run concurrently. This number must be less than or equal to the number of workers that your MATLAB Parallel Server license supports.",
      "Type": "Number",
      "MinValue": 1,
      "Default": 1024
    },
    "EC2PricingModel": {
      "Description": "Choose either On-Demand or Spot Pricing for the EC2 instances provisioned by AWS Batch. For more information on pricing, see https://aws.amazon.com/ec2/pricing.",
      "Type": "String",
      "Default": "On-Demand",
      "AllowedValues": [
        "On-Demand",
        "Spot"
      ]
    },
    "NumGPUsPerWorker": {
      "Description": "Specify the number of GPUs for each MATLAB worker to use. If you specify a value greater than 0, you must specify at least one GPU-based instance type supported by AWS Batch in the Instance Types field. For a list of supported GPU-based instance types, see https://docs.aws.amazon.com/batch/latest/userguide/gpu-jobs.html.",
      "Type": "Number",
      "Default": 0,
      "MinValue": 0
    },
    "NumVCPUsPerWorker": {
      "Description": "Specify the number of vCPUs for each MATLAB worker to use. Two vCPUs per worker is recommended.",
      "Type": "Number",
      "MinValue": 1,
      "Default": 2
    },
    "MemoryPerWorker": {
      "Description": "Specify the amount of memory in MiB that each MATLAB worker can use. A minimum of 2000 MiB is required.",
      "Type": "Number",
      "MinValue": 2000,
      "Default": 2000
    },
    "Subnets": {
      "Description": "Select IDs of existing subnets for the EC2 instances provisioned by AWS Batch. All subnets must exist in the VPC you have selected. It is recommended that you select a subnet for each availability zone in the VPC you have selected.",
      "Type": "List<AWS::EC2::Subnet::Id>",
      "ConstraintDescription": "Must be the ID of existing subnets within the chosen VPC.",
      "AllowedPattern": ".+"
    },
    "SpotBidPrice": {
      "Description": "Specify the maximum percentage of On-Demand pricing you want to pay for Spot resources. This parameter is ignored if you select the 'On Demand' EC2 pricing model.",
      "Type": "Number",
      "MinValue": 10,
      "Default": 100
    },
    "VPC": {
      "Description": "Select the ID of an existing VPC in which to deploy this stack.",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "Must be the ID of an existing VPC.",
      "AllowedPattern": ".+"
    }
  },
  "Rules": {
    "SubnetsInVPC": {
      "Assertions": [
        {
          "Assert": {
            "Fn::EachMemberEquals": [
              {
                "Fn::ValueOfAll": [
                  "AWS::EC2::Subnet::Id",
                  "VpcId"
                ]
              },
              {
                "Ref": "VPC"
              }
            ]
          },
          "AssertDescription": "All subnets must exist in the VPC you have selected."
        }
      ]
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "SnapshotID": "snap-07f2a77cb87a99951"
      },
      "us-east-2": {
        "SnapshotID": "snap-02af201fc0fb14316"
      },
      "us-west-1": {
        "SnapshotID": "snap-0515f8fe8b67e4ecd"
      },
      "us-west-2": {
        "SnapshotID": "snap-0a3ad0300e394079a"
      },
      "ca-central-1": {
        "SnapshotID": "snap-0fb9fb7ff818e18a0"
      },
      "eu-central-1": {
        "SnapshotID": "snap-034bcc07f08c02911"
      },
      "eu-west-1": {
        "SnapshotID": "snap-00cbca5502dce44de"
      },
      "eu-west-2": {
        "SnapshotID": "snap-047271509e4a82a08"
      },
      "eu-west-3": {
        "SnapshotID": "snap-080d5de5f14c5eca6"
      },
      "eu-north-1": {
        "SnapshotID": "snap-0a67292f4ca59db87"
      },
      "sa-east-1": {
        "SnapshotID": "snap-021742726505775bb"
      },
      "me-south-1": {
        "SnapshotID": "snap-026a81f81d2fa1530"
      },
      "ap-east-1": {
        "SnapshotID": "snap-09867f4fa3c5d0695"
      },
      "ap-south-1": {
        "SnapshotID": "snap-0dd129c16ff6ef5ca"
      },
      "ap-northeast-1": {
        "SnapshotID": "snap-0155966e9207d373c"
      },
      "ap-northeast-2": {
        "SnapshotID": "snap-0117becd6a2803a18"
      },
      "ap-southeast-1": {
        "SnapshotID": "snap-09992b5b84a9f16cf"
      },
      "ap-southeast-2": {
        "SnapshotID": "snap-0518da1c7718f8d73"
      }
    },
    "Map": {
      "EBSDeviceName": {
        "SATA": "/dev/sdb"
      },
      "MatlabRoot": {
        "EC2Instance": "/usr/local/matlab",
        "Container": "/usr/local/matlab"
      }
    }
  },
  "Conditions": {
    "UsingSpot": {
      "Fn::Equals": [
        "Spot",
        {
          "Ref": "EC2PricingModel"
        }
      ]
    },
    "UsingGPUs": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "0",
            {
              "Ref": "NumGPUsPerWorker"
            }
          ]
        }
      ]
    }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EC2 Security Group for instances launched in the VPC by Batch",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "BatchServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "batch.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole"
        ]
      }
    },
    "IamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "EcsInstanceRole"
          }
        ]
      }
    },
    "EcsInstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2008-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
          "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        ]
      }
    },
    "SpotIamFleetRole": {
      "Type": "AWS::IAM::Role",
      "Condition": "UsingSpot",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": {
                "Service": "spotfleet.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole"
        ]
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ]
      }
    },
    "MultiplyFunctionLambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.lambda_handler",
        "Runtime": "python3.12",
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Code": {
          "ZipFile": {
            "Fn::Join": [
              "\n",
              [
                "# Copyright 2019-2024 The MathWorks, Inc.",
                "",
                "import cfnresponse",
                "",
                "",
                "def lambda_handler(event, context):",
                "    try:",
                "        result = int(event['ResourceProperties']['Op1']) * int(event['ResourceProperties']['Op2'])",
                "        cfnresponse.send(event, context, cfnresponse.SUCCESS, {'Value': result})",
                "    except Exception as e:",
                "        cfnresponse.send(event, context, cfnresponse.FAILED, {'Message': str(e)})"
              ]
            ]
          }
        }
      }
    },
    "MaxVCPUs": {
      "Type": "Custom::Multiply",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "MultiplyFunctionLambda",
            "Arn"
          ]
        },
        "Op1": {
          "Ref": "NumVCPUsPerWorker"
        },
        "Op2": {
          "Ref": "MaxWorkers"
        }
      }
    },
    "IndependentJobDefinition": {
      "Type": "AWS::Batch::JobDefinition",
      "Properties": {
        "Type": "container",
        "ContainerProperties": {
          "Image": {
            "Ref": "ContainerImage"
          },
          "Vcpus": {
            "Ref": "NumVCPUsPerWorker"
          },
          "Memory": {
            "Ref": "MemoryPerWorker"
          },
          "Command": [],
          "Volumes": [
            {
              "Host": {
                "SourcePath": {
                  "Fn::FindInMap": [
                    "Map",
                    "MatlabRoot",
                    "EC2Instance"
                  ]
                }
              },
              "Name": "matlab"
            }
          ],
          "MountPoints": [
            {
              "ContainerPath": {
                "Fn::FindInMap": [
                  "Map",
                  "MatlabRoot",
                  "Container"
                ]
              },
              "ReadOnly": false,
              "SourceVolume": "matlab"
            }
          ],
          "ResourceRequirements": {
            "Fn::If": [
              "UsingGPUs",
              [
                {
                  "Type": "GPU",
                  "Value": {
                    "Ref": "NumGPUsPerWorker"
                  }
                }
              ],
              {
                "Ref": "AWS::NoValue"
              }
            ]
          }
        }
      }
    },
    "JobQueue": {
      "Type": "AWS::Batch::JobQueue",
      "Properties": {
        "Priority": 1,
        "ComputeEnvironmentOrder": [
          {
            "Order": 1,
            "ComputeEnvironment": {
              "Ref": "ComputeEnvironment"
            }
          }
        ]
      }
    },
    "LaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateData": {
          "BlockDeviceMappings": [
            {
              "DeviceName": {
                "Fn::FindInMap": [
                  "Map",
                  "EBSDeviceName",
                  "SATA"
                ]
              },
              "Ebs": {
                "DeleteOnTermination": true,
                "SnapshotId": {
                  "Fn::FindInMap": [
                    "RegionMap",
                    {
                      "Ref": "AWS::Region"
                    },
                    "SnapshotID"
                  ]
                },
                "VolumeType": "gp2"
              }
            }
          ],
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "\n",
                [
                  "MIME-Version: 1.0",
                  "Content-Type: multipart/mixed; boundary=\"==MYBOUNDARY==\"",
                  "",
                  "--==MYBOUNDARY==",
                  "Content-Type: text/x-shellscript; charset=\"us-ascii\"",
                  "",
                  "#!/bin/sh",
                  {
                    "Fn::Sub": [
                      "sudo mkdir -p ${MATLABROOT}\nsudo mount ${DEVICE_NAME} ${MATLABROOT}",
                      {
                        "DEVICE_NAME": {
                          "Fn::FindInMap": [
                            "Map",
                            "EBSDeviceName",
                            "SATA"
                          ]
                        },
                        "MATLABROOT": {
                          "Fn::FindInMap": [
                            "Map",
                            "MatlabRoot",
                            "EC2Instance"
                          ]
                        }
                      }
                    ]
                  },
                  "--==MYBOUNDARY=="
                ]
              ]
            }
          }
        }
      }
    },
    "ComputeEnvironment": {
      "Type": "AWS::Batch::ComputeEnvironment",
      "Properties": {
        "Type": "MANAGED",
        "ComputeResources": {
          "Type": {
            "Fn::If": [
              "UsingSpot",
              "SPOT",
              "EC2"
            ]
          },
          "MinvCpus": 0,
          "DesiredvCpus": 0,
          "MaxvCpus": {
            "Fn::GetAtt": [
              "MaxVCPUs",
              "Value"
            ]
          },
          "InstanceTypes": {
            "Ref": "InstanceTypes"
          },
          "Subnets": {
            "Ref": "Subnets"
          },
          "SecurityGroupIds": [
            {
              "Ref": "SecurityGroup"
            }
          ],
          "InstanceRole": {
            "Ref": "IamInstanceProfile"
          },
          "BidPercentage": {
            "Fn::If": [
              "UsingSpot",
              {
                "Ref": "SpotBidPrice"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          "SpotIamFleetRole": {
            "Fn::If": [
              "UsingSpot",
              {
                "Ref": "SpotIamFleetRole"
              },
              {
                "Ref": "AWS::NoValue"
              }
            ]
          },
          "LaunchTemplate": {
            "LaunchTemplateId": {
              "Ref": "LaunchTemplate"
            }
          }
        },
        "ServiceRole": {
          "Ref": "BatchServiceRole"
        }
      }
    },
    "MWStorage": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "https://mathworks-reference-architectures-templates.s3.amazonaws.com/storage-location/v1/0/0/storage-location.yml",
        "Parameters": {
          "BucketName": "",
          "DeletionPolicy": "Delete",
          "Versioning": "No"
        }
      }
    }
  },
  "Outputs": {
    "ClusterMatlabRoot": {
      "Value": {
        "Fn::FindInMap": [
          "Map",
          "MatlabRoot",
          "Container"
        ]
      },
      "Description": "Path to MATLAB for workers."
    },
    "NumWorkers": {
      "Value": {
        "Ref": "MaxWorkers"
      },
      "Description": "The maximum number of MATLAB workers that the cluster can run concurrently."
    },
    "JobQueue": {
      "Value": {
        "Ref": "JobQueue"
      },
      "Description": "The AWS Batch job queue of the cluster."
    },
    "IndependentJobDefinition": {
      "Value": {
        "Ref": "IndependentJobDefinition"
      },
      "Description": "The AWS Batch job definition for independent MATLAB jobs."
    },
    "S3Bucket": {
      "Value": {
        "Fn::GetAtt": [
          "MWStorage",
          "Outputs.BucketName"
        ]
      },
      "Description": "The Amazon S3 bucket for data transfer between client and worker MATLABs."
    },
    "MATLABVersion": {
      "Value": "R2025a",
      "Description": "The MATLAB version supported by the cluster."
    }
  },
  "Metadata": {
    "StackType": "MATLAB Parallel Server with AWS Batch",
    "Release": "R2025a",
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPC",
            "Subnets"
          ]
        },
        {
          "Label": {
            "default": "MATLAB Worker Configuration"
          },
          "Parameters": [
            "NumVCPUsPerWorker",
            "NumGPUsPerWorker",
            "MemoryPerWorker"
          ]
        },
        {
          "Label": {
            "default": "Batch Compute Environment Configuration"
          },
          "Parameters": [
            "MaxWorkers",
            "InstanceTypes",
            "EC2PricingModel",
            "SpotBidPrice"
          ]
        },
        {
          "Label": {
            "default": "Advanced Configuration"
          },
          "Parameters": [
            "ContainerImage"
          ]
        }
      ],
      "ParameterLabels": {
        "VPC": {
          "default": "VPC"
        },
        "Subnets": {
          "default": "Subnets"
        },
        "NumVCPUsPerWorker": {
          "default": "Number of vCPUs per MATLAB worker"
        },
        "NumGPUsPerWorker": {
          "default": "Number of GPUs per MATLAB worker"
        },
        "MemoryPerWorker": {
          "default": "Memory per MATLAB worker"
        },
        "MaxWorkers": {
          "default": "Maximum number of MATLAB workers"
        },
        "EC2PricingModel": {
          "default": "EC2 pricing model"
        },
        "ContainerImage": {
          "default": "Container image"
        },
        "SpotBidPrice": {
          "default": "Spot bid price"
        },
        "InstanceTypes": {
          "default": "Instance types"
        }
      }
    }
  }
}